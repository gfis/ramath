#!perl
# Extract valid preserving mappings amat*vect1 => vect2 
# Copyright (c) 2015 Dr. Georg Fischer
# 2015-04-02: copied from split_tuple.pl
#
# usage:
#   perl get_maps.pl < infile > outfile
#-----------------------------------
use strict;

    my %hash = ();
    my ($sec, $min, $hour, $mday, $mon, $year, $wday, $yday, $isdst) = localtime (time);
    my $timestamp = sprintf ("%04d-%02d-%02d %02d:%02d:%02d", $year + 1900, $mon + 1, $mday, $hour, $min, $sec);    

    while (<>) {
        my $line = $_;
        $line =~ m{chain\s+(\d+)};
        my $chain = $1;
        $line =~ m{(\[\[[\d\-\,]+\](\,\[[\d\-\,]+\])+\])\s+(\[[\d\-\,]+\])};
        my $amat   = $1;
        my $vect0  = $3;
        my @tuples = $line =~ m{\s+\=\>\s+(\[[\d\-\,]+\])}g;
        foreach my $vecti (@tuples) {
            print "$vect0 => $vecti by $amat $chain\n";
            $vect0 = $vecti;
        } # foreach $vecti
    } # while <>
    if (0) {
        foreach my $key (sort(keys(%hash))) {
            print sprintf("%-32s %6d\n", $key, $hash{$key});
        } # foreach $key
    }
__DATA__
chain 2, fact 1 [[0,-3,1,-3],[0,0,3,1],[1,2,1,2],[1,0,2,1]] [6,-3,-4,-5] => [20,-17,-14,-7] => [58,-49,-42,-15] ?? [150,-141,-112,-41]
chain 8, fact 1 [[0,-2,-2,1],[-2,0,1,-2],[-2,-1,1,-1],[-1,-2,-1,1]] [6,-3,-4,-5] => [9,-6,-8,-1] => [27,-24,-19,10] => [96,-93,-59,50] => [354,-351,-208,199] => [1317,-1314,-764,755] => [4911,-4908,-2839,2830] => [18324,-18321,-10583,10574] => [68382,-68379,-39484,39475]
chain 2, fact 1 [[0,-2,-2,1],[-2,0,1,-2],[-2,-1,1,-1],[2,-3,3,2]] [6,-3,-4,-5] => [9,-6,-8,-1] => [27,-24,-19,10] ?? [96,-93,-59,89]
chain 8, fact 1 [[0,-2,-2,1],[-2,0,1,-2],[-2,-1,1,-1],[2,1,0,2]] [6,-3,-4,-5] => [9,-6,-8,-1] => [27,-24,-19,10] => [96,-93,-59,50] => [354,-351,-208,199] => [1317,-1314,-764,755] => [4911,-4908,-2839,2830] => [18324,-18321,-10583,10574] => [68382,-68379,-39484,39475]
chain 2, fact 1 [[0,-2,-2,1],[-2,0,1,-2],[-2,3,-2,-1],[-1,-2,-1,1]] [6,-3,-4,-5] => [9,-6,-8,-1] => [27,-24,-19,10] ?? [96,-93,-98,50]

