<?xml version="1.0" encoding="US-ASCII" ?>
<!--
	ant-buildfile for commandline, web application and web service
	@(#) $Id: build-import.xml 970 2012-10-25 16:49:32Z gfis $
	2012-03-08: with .ear and WEB-INF/application.xml; copy JSPs, but do not compile them
	2012-01-28: addWebXmlMappings="true" includes generated_web.xml in web.xml; don't copy JSPs to target
	2011-09-09: delete SUN_MICR.* in clean task
	2010-12-04: <metainf> in war target
	2010-09-15: strange problems with outdated JSPs, and moving ${build.classes}/COM/ibm/db2 to com/...
	2010-06-01: empty before clean
	2010-04-13: jspc again
	2009-11-17: tomcat6
	2009-04-24: Tomcat-port was 8180 (Debian)
	2008-06-26: exclude dependencies.txt from .war
	2008-02-22: manifest - copy META-INF/services/* 
	2008-02-13: jdk.version was 1.4
	2008-01-09: excludes **/web.xml in dist target
	2007-12-08: MANIFEST.MF was lowercase
	2007-04-12: mkdir WEB-INF/src
	2007-02-12: use ant import feature
	2007-01-15: refactored for teherba
-->
<!--
 * Copyright 2007 Dr. Georg Fischer <punctum at punctum dot kom>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<project name="unused">
<!-- needs these 3 properties from the importing ant build.xml file:
    <property name="ant.project.name"	value="churchcal"/>
    <property name="app.version"        value="1.4"/>
    <property name="app.main-class"     value="org.teherba.churchcal.ChurchCalendar"/>
-->		
	<property name="app.path"			value="." />
	<property name="build.home"			value="${basedir}/target" />
	<property name="build.classes"		value="${build.home}/WEB-INF/classes"/>
	<property name="build.api"			value="${build.home}/api" />
	<property name="dist.home"			value="${basedir}/dist" />
	<property name="tomcat.base"		value="/var/lib/tomcat" />
	<property name="tomcat.home"		value="/usr/share/tomcat" />
	<property name="tomcat.port"		value="8080" />
	<property name="catalina.lib"		value="${tomcat.base}/shared/lib" />
	<property name="axis.home"			value="${tomcat.base}/webapps/axis" />
	<property name="axis.lib"			value="${axis.home}/WEB-INF/lib" />
	<property name="etc.home"			value="${basedir}/etc" />
	<property name="lib.home"			value="${basedir}/lib" />
	<property name="lib2.home"			value="${basedir}/lib" />
	<property name="src.home"			value="${basedir}/src/main/java" />
	<property name="web.home"			value="${basedir}/web" />  
	<property name="webapp.path" 		value="${build.home}" />
	<property name="docs.home"			value="${build.home}/docs" />
	<property name="docs.api"			value="${docs.home}/api" />
	<property name="test.home"			value="${basedir}/test" />
	<property name="javac.debug"		value="on" />
	<property name="javac.debuglevel"	value="lines,vars,source" />
	<property name="jdk.version"		value="1.5" />

	<import file="${tomcat.home}/bin/catalina-tasks.xml"/>

	<path id="compile.classpath">
		<fileset dir="${dist.home}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib.home}">
			<include name="*.jar"/>
		</fileset>
	<!--
		<fileset dir="${lib2.home}">
			<include name="*.jar"/>
		</fileset>
	-->
		<!-- the following contains the servlet-api jar 
		-->
		<fileset dir="${tomcat.home}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${axis.lib}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<!-- ============= all ==============================================
  	-->
  	<target name="all" depends="clean,prepare,generate,javadoc,dist,directories,deploy,test"/>

	<!-- ============= empty, clean ==============================================
  	-->
	<target name="empty">
		<mkdir dir="${build.home}"/>
		<mkdir dir="${docs.home}"/>
		<mkdir dir="${dist.home}"/>
		<mkdir dir="${lib.home}"/>

		<delete dir="${build.home}" failonerror="false" quiet="true"/>
		<delete dir="${docs.home}"  failonerror="false" quiet="true"/>
		<delete failonerror="false" quiet="true">
			<fileset dir="${basedir}">
				<include name="**/*.bak"/>
				<include name="**/*.tmp"/>
			</fileset>
			<fileset dir="${dist.home}">
				<include name="**/*.?ar"/>
			</fileset>
		</delete>
	  	<delete failonerror="false" quiet="true">
    	    <fileset dir="${webapp.path}/WEB-INF/src"/>
        	<fileset dir="${webapp.path}/WEB-INF/classes/org/apache/jsp"/>
	  	</delete>

		<mkdir dir="${build.home}"/>
		<mkdir dir="${build.home}/WEB-INF"/>
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.classes}/META-INF"/>
		<mkdir dir="${build.home}/WEB-INF/lib"/>
		<mkdir dir="${build.home}/WEB-INF/src"/>
		<mkdir dir="${docs.home}"/>
		<mkdir dir="${docs.home}/api"/>
		<mkdir dir="${dist.home}"/>
	</target>

	<target name="clean" depends="empty">
		<unzip dest="${build.classes}">
			<fileset dir="${lib.home}">
				<include name="*.jar"/>
			</fileset>
		</unzip>
		<delete failonerror="false" quiet="true" verbose="true">
			<fileset dir="${build.classes}/META-INF" includes="SUN_MICR.*" />
		</delete>
    	<available property="wrong.COM.ibm" filepath="${build.classes}/COM/ibm/db2/app" file="Blob.class" />
    	<antcall target="wrong.clean.COM" />
	</target>
	<target name="wrong.clean.COM" if="wrong.COM.ibm">
    	<echo message="moving ${build.classes}/COM/ibm/db2 to ${build.classes}/com/ibm/db2" />
		<move todir="${build.classes}/com">
    		<fileset dir="${build.classes}/COM" />
		</move>
	</target>
	<!-- ============= echoproperties ==============================================
  	-->
	<target name="ep">
		<echoproperties format="text" />
	</target>

	<!-- ============= prepare =========================================
	-->
	<target name="prepare">
		<propertyfile file="build.number">
			<entry key="build.name"   value="${ant.project.name}" />
			<entry key="build.number" type="int"  value="1"   operation="+" />
			<entry key="build.date"   type="date" value="now" pattern="yyyy-MM-dd-HH-mm-ss" />
			<entry key="build.jdk"             	  value="for JDK ${jdk.version}" />
		</propertyfile>
	
		<!-- copy any properties (especially log4j.properties) to build directory -->
		<copy todir="${build.classes}">
			<fileset dir="${etc.home}">
				<include name="*.properties"/>
			</fileset>
			<fileset dir="${app.path}">
				<include name="LICENSE.txt"/>
				<include name="NOTICE.txt"/>
			</fileset>
		</copy>

		<!-- copy web.xml and application.xml to build directory
		-->
		<copy todir="${build.home}/WEB-INF">
			<fileset dir="${etc.home}/WEB-INF">
				<include name="web.xml"/>
				<include name="application.xml"/>
			</fileset>
		</copy>

		<!-- copy all stylesheets, JSPs, HTML pages and images -->
		<delete failonerror="false" quiet="true"><!-- strange problems with outdated JSPs -->
			<fileset dir="${build.home}">
				<include name="**/*.jsp"/>
			</fileset>
        	<fileset dir="${webapp.path}/WEB-INF/classes/org/apache/jsp"/>
		</delete>
		<copy todir="${build.home}">
			<fileset dir="${web.home}">
				<exclude name="**/*.bak"/>
			</fileset>
		</copy>
		
		<fixcrlf srcdir="${build.home}" includes="**/*.html,**/*.css,**/*.inc,**/*.xml,**/*.jsp" eol="lf" />			  
	<!-- libraries are expanded and merged with this application in 'clean' target
		<copy todir="${build.home}/WEB-INF/lib">
			<fileset dir="${lib.home}">
				<include name="*.jar"/>
			</fileset>
		</copy>
	-->
	</target>

	<!-- ============= compile ==========================================
  	-->
	<target name="compile"	depends="generate"> 	
		<depend srcdir="${src.home}" destdir="${build.classes}" cache="${build.home}" dump="yes" />
		<javac  srcdir="${src.home}" destdir="${build.classes}" listfiles="yes"
				encoding="utf8"
				includeantruntime="false"
				source="${jdk.version}" target="${jdk.version}"
				debug="${javac.debug}" debuglevel="${javac.debuglevel}">
			<compilerarg line="-Xlint:unchecked -Xlint:deprecation" />
			<classpath>
				<path refid="compile.classpath"/>
			</classpath>
		</javac>
	</target>

	<!-- ============= precompile JSPs (Tomcat 6) ===============================================
	-->
	<target name="jspc" depends="prepare,compile">
    	<jasper validateXml="false" 
    	        uriroot="${webapp.path}" 
        	    webXmlFragment="${webapp.path}/WEB-INF/generated_web.xml" 
    	        addWebXmlMappings="true"
            	outputDir="${webapp.path}/WEB-INF/src" 
    			/> 
	    <javac destdir="${webapp.path}/WEB-INF/classes"
	    		optimize="off" debug="on" failonerror="false"
	    		includeantruntime="false"
	    		srcdir="${webapp.path}/WEB-INF/src" 
		   		excludes="**/*.smap">
	    	<compilerarg line="-Xlint:unchecked" />
	    	<classpath>
	        	<pathelement location="${webapp.path}/WEB-INF/classes"/>
	        	<fileset dir="${webapp.path}/WEB-INF/lib">
	        		<include name="*.jar"/>
	        	</fileset>
	        	<pathelement location="${tomcat.home}/lib"/>
	        	<fileset dir="${tomcat.home}/lib">
	        		<include name="*.jar"/>
	        	</fileset>
	        	<fileset dir="${tomcat.home}/bin"> 
	        		<include name="*.jar"/> 
	        	</fileset> 
	      	</classpath>
	      	<include name="**" />
	      	<exclude name="tags/**" />
	    </javac>
	</target>

	<!-- ============= manifest =========================================
	-->
	<target name="manifest">
		<loadproperties srcFile="build.number" />
		<delete failonerror="false" file="${build.classes}/META-INF/MANIFEST.MF" />
		<manifest file="${build.classes}/META-INF/MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}"/>
			<attribute name="Main-Class" value="${app.main-class}"/>
			<section name="${ant.project.name}">
				<attribute name="Specification-Title"		value="${ant.project.name}"/>
				<attribute name="Specification-Version"		value="${app.version} ${build.jdk}"/>
				<attribute name="Specification-Vendor"		value="Dr. Georg Fischer"/>
				<attribute name="Implementation-Title"		value="${ant.project.name}"/>
				<attribute name="Implementation-Version"	value="${ant.project.name} ${build.number} ${build.date}"/>
				<attribute name="Implementation-Vendor"		value="Dr. Georg Fischer"/>
			</section>
		</manifest>
		<copy todir="${build.classes}/META-INF">
			<fileset dir="${etc.home}/META-INF">
				<exclude name="**/*.bak"/>
				<include name="**/*"/>
			</fileset>
		</copy>
	</target>

	<!-- ============= dist ==============================================
		create the binary distributions: jar and war
	-->
	<target name="dist"		depends="prepare,compile,manifest"> 	
		<jar  jarfile="${dist.home}/${ant.project.name}.jar" basedir="${build.classes}"
			manifest="${build.classes}/META-INF/MANIFEST.MF"
		/>
		<war destfile="${dist.home}/${ant.project.name}.war" basedir="${build.home}" 
		  		manifest="${build.classes}/META-INF/MANIFEST.MF"
		  		excludes="**/web.xml,dependencies.txt"
	  			webxml="${build.home}/WEB-INF/web.xml"
	  			defaultexcludes="no"
	  			>
	  		<metainf dir="${etc.home}/META-INF" includes="*.xml" />
	  	</war> 
		<copy todir="${build.home}/META-INF">
			<fileset dir="${etc.home}/META-INF">
				<include name="geronimo-application.xml"/>
			</fileset>
		</copy>
	<!--
	-->
		<ear destfile="${dist.home}/${ant.project.name}.ear" basedir="${build.home}" 
		  		excludes="**/application.xml,dependencies.txt"
				appxml="${etc.home}/META-INF/application.xml"
	  			>
	  		<fileset dir="${dist.home}" includes="*.war"/>
	  	</ear> 
	</target>

	<!-- ============= (un-) deployment to Tomcat and Axis =====================
	-->
	<target name="deploy" depends="dist,deploy.webapps,deploy.service" />

	<!-- Tomcat -->
	<target name="deploy.webapps" depends="dist">
		<touch file="${dist.home}/${ant.project.name}.war" />
		<copy todir="${tomcat.base}/webapps">
			<fileset dir="${dist.home}">
				<exclude name="*.jar"/>
				<include name="*.war"/>
			</fileset>
		</copy>
	</target>

	<target name="deploy.ear" >
		<copy todir="${axis.lib}">
			<fileset dir="${dist.home}">
				<include name="*.jar"/>
				<exclude name="*.war"/>
			</fileset>
		</copy>
		<java classname="org.apache.axis.client.AdminClient" classpathref="compile.classpath" fork="true">
			<arg line="-lhttp://localhost:${tomcat.port}/axis/services/AdminService etc/deploy.wsdd" />
		</java>
	</target>

	<!-- Axis -->
	<target name="deploy.service" >
		<copy todir="${axis.lib}">
			<fileset dir="${dist.home}">
				<include name="*.jar"/>
				<exclude name="*.war"/>
			</fileset>
		</copy>
		<java classname="org.apache.axis.client.AdminClient" classpathref="compile.classpath" fork="true">
			<arg line="-lhttp://localhost:${tomcat.port}/axis/services/AdminService etc/deploy.wsdd" />
		</java>
	</target>

	<!-- Axis -->
	<target name="remote.service" >
        <scp todir="gfis@gfis.dataway.ch:/usr/local/tomcat/shared/lib" trust="yes"  
        		password="${scp.password}" >
    		<fileset dir="${dist.home}/">
				<include name="*.jar"/>
				<exclude name="*.war"/>
    		</fileset>
  		</scp>
		<java classname="org.apache.axis.client.AdminClient" classpathref="compile.classpath" fork="true">
			<arg line="-lhttp://www.punctum.com:${tomcat.port}/axis/services/AdminService etc/deploy.wsdd" />
		</java>
	</target>

	<target name="run">
		<java classname="${class}" classpathref="compile.classpath" fork="true">
			<arg line="${args}" />
		</java>
	</target>

	<target name="undeploy" depends="undeploy.service" />

	<target name="undeploy.service" >
		<java classname="org.apache.axis.client.AdminClient" classpathref="compile.classpath" fork="true">
			<arg line="-lhttp://localhost:${tomcat.port}/axis/services/AdminService etc/undeploy.wsdd" />
		</java>
	</target>


	<!-- ============= javadoc ==========================================
	-->
	<target name="javadoc">
		<mkdir dir="${docs.home}/api"/>
		<javadoc locale="de_DE" sourcepath="${src.home}" destdir="${docs.home}/api"
				Author="true" Version="true" use="true" Private="yes"
				encoding="UTF-8" docencoding="UTF-8" charset="UTF-8"
				packagenames="org.*"
				additionalparam="-linksource -sourcetab 4 -keywords"
				>
			<!-- 
				packagenames="org.teherba.${ant.project.name}.*"
				excludepackagenames="org.apache.*"
			-->
	  		<classpath refid="compile.classpath"/>
		</javadoc>
	</target>

	<!-- ============= Listing of the jar and war files' contents ======
  	-->
	<target name="directories" depends="dist">
		<mkdir dir="${docs.home}/api/directories" />
		<exec dir="${basedir}" executable="unzip" output="${docs.home}/api/directories/${ant.project.name}.jar.lst" >
			<arg value="-v" /><arg value="dist/${ant.project.name}.jar" />
		</exec>
		<mkdir dir="${docs.home}/api/directories" />
		<exec dir="${basedir}" executable="unzip" output="${docs.home}/api/directories/${ant.project.name}.war.lst" >
			<arg value="-v" /><arg value="dist/${ant.project.name}.war" />
		</exec>
	</target>

	<!-- ============= Check whether all files got a SCCS Id ======
  	-->
	<target name="checkid">
		<exec dir="${basedir}" 
		command="find . -type f | grep -vE &quot;\.svn&quot; | grep -vE &quot;.*~&quot; | grep -v &quot;/target&quot; | xargs -l ident 2>&amp;1 | grep &quot;no id keywords&quot;" />
	</target>
	<!-- ============= distribution zip ================================
	-->
	<target name="site" >
		<delete file="${ant.project.name}.${build.date}.zip" quiet="true" />
		<zip destfile="site/dist/${ant.project.name}.${build.date}.zip" basedir="." 
				includes="${ant.project.name}/**" 
				excludes="${ant.project.name}/**.zip ${ant.project.name}/**.tgz" />
	</target>

	<target name="subdir" >
		<mkdir dir="${dir}/src/main/java/org/teherba/${dir}" />
		<mkdir dir="${dir}/src/main/webapp" />
	</target>

</project>
