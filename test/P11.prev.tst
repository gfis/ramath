 - a^3 + a^3*a11^3 + a^3*a21^3 + a^3*a31^3 - a^3*a41^3 + 3*a^2*a11^2*a12*b + 3*a^2*a21^2*a22*b + 3*a^2*a31^2*a32*b - 3*a^2*a41^2*a42*b + 3*a*a11*a12^2*b^2 + 3*a*a21*a22^2*b^2 + 3*a*a31*a32^2*b^2 - 3*a*a41*a42^2*b^2 - b^3 + a12^3*b^3 + a22^3*b^3 + a32^3*b^3 - a42^3*b^3 + 3*a^2*a11^2*a13*c + 3*a^2*a21^2*a23*c + 3*a^2*a31^2*a33*c - 3*a^2*a41^2*a43*c + 6*a*a11*a12*a13*b*c + 6*a*a21*a22*a23*b*c + 6*a*a31*a32*a33*b*c - 6*a*a41*a42*a43*b*c + 3*a12^2*a13*b^2*c + 3*a22^2*a23*b^2*c + 3*a32^2*a33*b^2*c - 3*a42^2*a43*b^2*c + 3*a*a11*a13^2*c^2 + 3*a*a21*a23^2*c^2 + 3*a*a31*a33^2*c^2 - 3*a*a41*a43^2*c^2 + 3*a12*a13^2*b*c^2 + 3*a22*a23^2*b*c^2 + 3*a32*a33^2*b*c^2 - 3*a42*a43^2*b*c^2 - c^3 + a13^3*c^3 + a23^3*c^3 + a33^3*c^3 - a43^3*c^3 + 3*a^2*a11^2*a14*d + 3*a^2*a21^2*a24*d + 3*a^2*a31^2*a34*d - 3*a^2*a41^2*a44*d + 6*a*a11*a12*a14*b*d + 6*a*a21*a22*a24*b*d + 6*a*a31*a32*a34*b*d - 6*a*a41*a42*a44*b*d + 3*a12^2*a14*b^2*d + 3*a22^2*a24*b^2*d + 3*a32^2*a34*b^2*d - 3*a42^2*a44*b^2*d + 6*a*a11*a13*a14*c*d + 6*a*a21*a23*a24*c*d + 6*a*a31*a33*a34*c*d - 6*a*a41*a43*a44*c*d + 6*a12*a13*a14*b*c*d + 6*a22*a23*a24*b*c*d + 6*a32*a33*a34*b*c*d - 6*a42*a43*a44*b*c*d + 3*a13^2*a14*c^2*d + 3*a23^2*a24*c^2*d + 3*a33^2*a34*c^2*d - 3*a43^2*a44*c^2*d + 3*a*a11*a14^2*d^2 + 3*a*a21*a24^2*d^2 + 3*a*a31*a34^2*d^2 - 3*a*a41*a44^2*d^2 + 3*a12*a14^2*b*d^2 + 3*a22*a24^2*b*d^2 + 3*a32*a34^2*b*d^2 - 3*a42*a44^2*b*d^2 + 3*a13*a14^2*c*d^2 + 3*a23*a24^2*c*d^2 + 3*a33*a34^2*c*d^2 - 3*a43*a44^2*c*d^2 + d^3 + a14^3*d^3 + a24^3*d^3 + a34^3*d^3 - a44^3*d^3
getVariablePowers(a,b,c,d)=a^3 + a^2*b + a*b^2 + b^3 + a^2*c + a*b*c + b^2*c + a*c^2 + b*c^2 + c^3 + a^2*d + a*b*d + b^2*d + a*c*d + b*c*d + c^2*d + a*d^2 + b*d^2 + c*d^2 + d^3
groupBy(a,b,c,d)=
 + a^3*( - 1 + a11^3 + a21^3 + a31^3 - a41^3)
 + a^2*b*(3*a11^2*a12 + 3*a21^2*a22 + 3*a31^2*a32 - 3*a41^2*a42)
 + a*b^2*(3*a11*a12^2 + 3*a21*a22^2 + 3*a31*a32^2 - 3*a41*a42^2)
 + b^3*( - 1 + a12^3 + a22^3 + a32^3 - a42^3)
 + a^2*c*(3*a11^2*a13 + 3*a21^2*a23 + 3*a31^2*a33 - 3*a41^2*a43)
 + a*b*c*(6*a11*a12*a13 + 6*a21*a22*a23 + 6*a31*a32*a33 - 6*a41*a42*a43)
 + b^2*c*(3*a12^2*a13 + 3*a22^2*a23 + 3*a32^2*a33 - 3*a42^2*a43)
 + a*c^2*(3*a11*a13^2 + 3*a21*a23^2 + 3*a31*a33^2 - 3*a41*a43^2)
 + b*c^2*(3*a12*a13^2 + 3*a22*a23^2 + 3*a32*a33^2 - 3*a42*a43^2)
 + c^3*( - 1 + a13^3 + a23^3 + a33^3 - a43^3)
 + a^2*d*(3*a11^2*a14 + 3*a21^2*a24 + 3*a31^2*a34 - 3*a41^2*a44)
 + a*b*d*(6*a11*a12*a14 + 6*a21*a22*a24 + 6*a31*a32*a34 - 6*a41*a42*a44)
 + b^2*d*(3*a12^2*a14 + 3*a22^2*a24 + 3*a32^2*a34 - 3*a42^2*a44)
 + a*c*d*(6*a11*a13*a14 + 6*a21*a23*a24 + 6*a31*a33*a34 - 6*a41*a43*a44)
 + b*c*d*(6*a12*a13*a14 + 6*a22*a23*a24 + 6*a32*a33*a34 - 6*a42*a43*a44)
 + c^2*d*(3*a13^2*a14 + 3*a23^2*a24 + 3*a33^2*a34 - 3*a43^2*a44)
 + a*d^2*(3*a11*a14^2 + 3*a21*a24^2 + 3*a31*a34^2 - 3*a41*a44^2)
 + b*d^2*(3*a12*a14^2 + 3*a22*a24^2 + 3*a32*a34^2 - 3*a42*a44^2)
 + c*d^2*(3*a13*a14^2 + 3*a23*a24^2 + 3*a33*a34^2 - 3*a43*a44^2)
 + d^3*(1 + a14^3 + a24^3 + a34^3 - a44^3)
