# Collection of Testcases for Ramath
# @(#) $Id: linear.tests 955 2012-06-05 07:22:59Z gfis $
# 2019-09-19: RationalTriangle RT%
# 2019-08-28: RationalVector RV%
# 2015-03-23, Dr. Georg Fischer: extracted from simple.tests
#-----------------------------------
# Caution:
# (1) Adjust the following line: URL where Ramath was deployed
URL=http://localhost:8080/ramath/servlet
# (2) Adjust the following line: default commandline arguments
ARGS=
#======================================================================

# BigVector
PACKAGE=org.teherba.ramath.linear

TEST BV1 BigVector no-args
CALL BigVector

TEST BV2 BigVector add
CALL BigVector "[1,2,-5] + [1,1,1,7]"

TEST BV3 BigVector subtract
CALL BigVector "[1,2,-5] - [1,1,1,7]"

TEST BV4 BigVector negate
CALL BigVector "[1,2,-5] -"

TEST BV5 BigVector scale
CALL BigVector "[1,2,-5] * -2"

TEST BV6 BigVector multiply
CALL BigVector "[1,2]    * [1,2,-5]"

TEST BV7 BigVector divide - no remainder
CALL BigVector "[7,14,-35] / [1,2,-5]"

TEST BV8 BigVector divideAndRemainder
CALL BigVector "[7,28,-35] / [2,4,-10]"

TEST BV9 BigVector divideAndRemainder: quotient = [0]
CALL BigVector "[7,8]      / [1,2,-5]"

TEST BV10 BigVector divideAndRemainder
CALL BigVector "[5,1,2,3,6]  / [2,3]"

TEST BV11 BigVector divideAndRemainder with dens
CALL BigVector "[5,1,2,3,6]/2  / [2,3]/7"

TEST BV12 BigVector add
CALL BigVector "[1,2,-5]/3 + [1,1,1,7]/5"

TEST BV13 BigVector subtract
CALL BigVector "[1,2,-5]/3 - [1,1,1,7]/5"

TEST BV14 BigVector negate
CALL BigVector "[1,2,-5]/3 -"

TEST BV15 BigVector scale
CALL BigVector "[1,2,-5]/3 * -2"

TEST BV16 BigVector multiply
CALL BigVector "[1,2]/3    * [1,2,-5]/5"

TEST BV17 BigVector divide - no remainder
CALL BigVector "[7,14,-35]/3 / [1,2,-5]/5"

TEST BV18 BigVector divideAndRemainder
CALL BigVector "[7,28,-35]/3 / [2,4,-10]/5"

TEST BV19 BigVector divideAndRemainder: quotient = [0]
CALL BigVector "[7,8]/3      / [1,2,-5]/5"

TEST BV20 BigVector multiply
CALL BigVector "[1,7]/3    * [1,7]/5"

#----
# RationalVector
PACKAGE=org.teherba.ramath.linear

TEST RV1 RationalVector no-args
CALL RationalVector

TEST RV2 RationalVector add
CALL RationalVector "[1/2,2/3,-1/5] + [1/2,1/3,1/5,7/6]"

TEST RV3 RationalVector subtract
CALL RationalVector "[1/2,2/3,-1/5,-4/3] - [1/2,1/3,1/5]"

TEST RV4 RationalVector negate
CALL RationalVector "[1/2,2/3,-1/5] -"

TEST RV5 RationalVector scale
CALL RationalVector "[1/2,2/3,-1/5] * -1/2"

TEST RV6 RationalVector multiply -> [1/4,1/2,11/90,-2/15]
CALL RationalVector "[1/2,2/3] * [1/2,1/3,-1/5]"

TEST RV7 RationalVector divide - no remainder
CALL RationalVector "[7/2,7/3,-7/5] / [1/2,1/3,-1/5]"

TEST RV8 RationalVector divideAndRemainder
CALL RationalVector "[7/2,8/3,-7/5] / [1/2,1/3,-1/5]"

TEST RV9 RationalVector divideAndRemainder: quotient = 0
CALL RationalVector "[7/2,8/3] / [1/2,1/3,-1/5]"

TEST RV11 RationalVector divideAndRemainder 
CALL RationalVector "[1/4,1/2,11/90,-2/15] / [1/2,2/3]"

TEST RV12 RationalVector divideAndRemainder 
CALL RationalVector "[1/4,1/2,11/90,-2/15] / [1/2,1/3,-1/5]"
#----
# RationalTriangle
PACKAGE=org.teherba.ramath.linear

TEST RT1 RationalTriangle no-args
CALL RationalTriangle

TEST RT2 RationalTriangle add
CALL RationalTriangle "[1/2,2/3,-1/5] + [1/2,1/3,1/5,7/6]"

TEST RT3 RationalTriangle subtract
CALL RationalTriangle "[1/2,2/3,-1/5,-4/3] - [1/2,1/3,1/5]"

TEST RT4 RationalTriangle negate
CALL RationalTriangle "[1/2,2/3,-1/5] -"

TEST RT5 RationalTriangle scale
CALL RationalTriangle "[1/2,2/3,-1/5] * -1/2"

TEST RT6 RationalTriangle multiply -> [[2],[-1,5],[-6,25,-25]]
CALL RationalTriangle "[1,[-2,5]] * [2,[3,-5]]"

TEST RT7 RationalTriangle divide - no remainder
CALL RationalTriangle "[7/2,7/3,-7/5] / [1/2,1/3,-1/5]"

TEST RT8 RationalTriangle divideAndRemainder
CALL RationalTriangle "[7/2,8/3,-7/5] / [1/2,1/3,-1/5]"

TEST RT9 RationalTriangle divideAndRemainder: quotient = 0
CALL RationalTriangle "[7/2,8/3] / [1/2,1/3,-1/5]"

TEST RT10 RationalTriangle multiply -> [[2],[3,6],[0,3,6],[0,0,3,4]]
CALL RationalTriangle "[2,[3,4]] * [1,[0,1],[0,0,1]]"

TEST RT11 RationalTriangle divide
CALL RationalTriangle "[[2],[3,6],[0,3,6],[0,0,3,4]] / [1,[0,1],[0,0,1]]"

TEST RT12 RationalTriangle divide
CALL RationalTriangle "[[2],[3,6],[0,3,6],[0,0,3,4]] / [2,[3,4]]"

#------------------------
# Symbolic Matrix Algebra
PACKAGE=org.teherba.ramath.symbolic

TEST S00 PolyVector from expression
CALL PolyVector

TEST S01 PolyVector inner product
CALL PolyVector -read "a-b" "a+b" "c+d"

TEST S02 PolyMatrix identity(4)
CALL PolyMatrix 4

TEST S03 PolyMatrix determinant(3), (4)
CALL PolyMatrix

TEST S04 PolyMatrix characteristic polynomial
CALL PolyMatrix -char 3

TEST PV1 PolyVector.powerSum
CALL PolyVector -psum m^2-n^2 (2*m*n) m^2+n^2

TEST PV2 PolyVector.powerSum
CALL PolyVector -psum a b c 

TEST PMA1 PolyMatrix.multiply
CALL PolyMatrix -mult [[5,5,0,-3],[3,0,5,5],[0,-3,5,5],[5,5,3,0]] [a,b,c,d]

TEST PMA2 abst
CALL PolyMatrix -abst [[-2,-2,1,0],[1,0,2,2],[2,2,0,1],[0,1,-2,-2]] 

TEST PMA3 abst
CALL PolyMatrix -abst [[5,5,0,-3],[3,0,5,5],[0,-3,5,5],[5,5,3,0]] 

#----------
PACKAGE=org.teherba.ramath.linear

TEST MA09 exchangeRows, negateRows
CALL MatrixTester -negate dummy

TEST MA10 permutation
CALL MatrixTester -permul [[11,12,13,14],[21,22,23,24],[31,32,33,34],[41,42,43,44]]

TEST MP10 get permutations
CALL MatrixTester -perms test/MA10.this.tst

TEST VE10 isPowerSum
CALL Vector -psum   [[39,-26,-36,17]] 4 0

TEST VE11 isPowerSum
CALL Vector -psum   [[138,-76,-141,85]] 4 0

TEST MA11 chain
CALL MatrixTester -chain [[2,-1,0,2],[-2,0,-1,-2],[0,2,2,-1],[2,-1,1,1]] [6,-5,-3,-4] 4 0

TEST MA12            chain 
CALL MatrixTester -chain [[5,5,0,-3],[3,0,5,5],[0,-3,5,5],[5,5,3,0]] [1,12,9,10] 2 2
#    [9,10,1,12] passed
#    [1,12,9,10] passed
#    16      2     15     9  failed
#    27     10     24    19  failed

TEST MA13            chain 
CALL MatrixTester -chain [[5,5,0,-3],[3,0,-5,5],[0,3,5,-5],[5,5,-3,0]]  [3,4,5,6] 3 1
# chain 8, fact 0  [[5,5,0,-3],[3,0,-5,5],[0,3,5,-5],[5,5,-3,0]]        [3,4,5,6] => [17,14,7,20] => [95,116,-23,134] => [653,1070,-437,1124] => [5243,9764,-4595,9926] => [45257,88334,-43313,88820] => [401495,796436,-395663,797894] => [3595973,7172270,-3578477,7176644] => [32311283,64563524,-32258795,64576646]

TEST MA14            chain 
CALL MatrixTester -chain [[0,1,3,-3],[2,2,0,-1],[1,0,-3,3],[2,2,-1,0]]  [3,4,5,6] 3 1
# none

TEST MA15            chain 
CALL MatrixTester -chain [[-2,-1,3,1],[-3,0,6,1],[-3,-2,4,2],[-3,-1,6,2]]   [3,4,5,6] 3 1
# chain 8, fact 0  [[-2,-1,3,1],[-3,0,6,1],[-3,-2,4,2],[-3,-1,6,2]]     [3,4,5,6] => [11,27,15,29] => [25,86,31,88] => [45,199,53,201] => [71,384,81,386] => [103,659,115,661] => [141,1042,155,1044] => [185,1551,201,1553] => [235,2204,253,2206]

TEST MA16            chain 
CALL MatrixTester -chain [[0,-2,1,4],[1,1,1,1],[1,-2,0,4],[1,-1,1,4]]   [3,4,5,6] 3 1
# chain 8, fact 0  [[0,-2,1,4],[1,1,1,1],[1,-2,0,4],[1,-1,1,4]]         [3,4,5,6] => [21,18,19,28] => [95,86,97,134] => [461,412,459,642] => [2203,1974,2205,3076] => [10561,9458,10559,14738] => [50595,45316,50597,70614] => [242421,217122,242419,338332] => [1161503,1040294,1161505,1621046]

TEST MA17            chain 
CALL MatrixTester -chain [[1,2,2,0],[1,1,1,1],[2,2,1,0],[2,3,2,0]]      [3,4,5,6] 3 1
# chain 8, fact 0  [[1,2,2,0],[1,1,1,1],[2,2,1,0],[2,3,2,0]]            [3,4,5,6] => [21,18,19,28] => [95,86,97,134] => [461,412,459,642] => [2203,1974,2205,3076] => [10561,9458,10559,14738] => [50595,45316,50597,70614] => [242421,217122,242419,338332] => [1161503,1040294,1161505,1621046]

TEST MA18            chain 
CALL MatrixTester -chain [[1,-2,0,4],[1,1,1,1],[0,-2,1,4],[1,-1,1,4]]   [3,4,5,6] 3 1
# chain 8, fact 0  [[1,-2,0,4],[1,1,1,1],[0,-2,1,4],[1,-1,1,4]]         [3,4,5,6] => [19,18,21,28] => [95,86,97,134] => [459,412,461,642] => [2203,1974,2205,3076] => [10559,9458,10561,14738] => [50595,45316,50597,70614] => [242419,217122,242421,338332] => [1161503,1040294,1161505,1621046]

TEST MA19            chain 
CALL MatrixTester -chain [[2,2,1,0],[1,1,1,1],[1,2,2,0],[2,3,2,0]]      [3,4,5,6] 3 1
# chain 8, fact 0  [[2,2,1,0],[1,1,1,1],[1,2,2,0],[2,3,2,0]]            [3,4,5,6] => [19,18,21,28] => [95,86,97,134] => [459,412,461,642] => [2203,1974,2205,3076] => [10559,9458,10561,14738] => [50595,45316,50597,70614] => [242419,217122,242421,338332] => [1161503,1040294,1161505,1621046]

#  chain 8, fact 1 [[3,1,-1,2],[1,3,2,-1],[-2,-1,1,-1],[-1,-2,-1,1]] [6,-3,-4,-5] => [9,-6,-8,-1] => [27,-24,-19,10] => [96
#  chain 8, fact 1 [[3,1,2,-1],[1,3,-1,2],[-1,-2,1,-1],[-2,-1,-1,1]] [6,-3,-4,-5] => [12,-9,1,-10] => [39,-36,17,-26] => [1
TEST MA20            chain
CALL MatrixTester -chain [[3,1,-1,2],[1,3,2,-1],[-2,-1,1,-1],[-1,-2,-1,1]] [9,-6,-8,-1] 4 0
TEST MA21            chain
CALL MatrixTester -chain [[3,1,2,-1],[1,3,-1,2],[-1,-2,1,-1],[-2,-1,-1,1]] [12,-9,1,-10] 4 0

PACKAGE=org.teherba.ramath.symbolic
TEST MA22
CALL PolyMatrix -abst [[3,1,-1,2],[1,3,2,-1],[-2,-1,1,-1],[-1,-2,-1,1]]
TEST MA23
CALL PolyMatrix -abst [[3,1,2,-1],[1,3,-1,2],[-1,-2,1,-1],[-2,-1,-1,1]]
TEST MA24
CALL PolyMatrix -abst [[0,-2,1,-2],[-2,0,-2,1],[2,1,2,0],[1,2,0,2]]
TEST MA25
CALL PolyMatrix -abst [[3,1,2,-1],[-2,0,-2,1],[-1,-2,1,-1],[-2,-1,-1,1]]

#-------------------------
# Tests of linear algebra classes
PACKAGE=org.teherba.ramath.linear

TEST L01 Elementary matrices of size 4
CALL MatrixTester 4

TEST L02 powersum^2
CALL Vector -pow [3,4,5]

TEST L03 powersum^3
CALL Vector -pow [3,4,5,6]

TEST L04 no powersum^4
CALL Vector -pow [3,4,5,6,7]

TEST L05 Vector multiplication and determinants
DATA
. twice: 10 3 18 19 => 16 23 41 44, determinant -35?
3 2 1 -2
-1 -1 2 0
-2 2 2 1
2 2 1 0
. twice: 14 17 7 20 => 37 27 30 46, determinant -66?
3 2 3 -3
-2 2 3 0
2 -3 -1 3
3 -1 3 0
. twice: 19 18 21 28 => 97 86 95 134, determinant -1!
3 3 2 -2
1 1 1 1
0 1 1 2
2 3 2 0
. unknown: 1 2 3 => 1 2 3, determinant -9999
1 2 3
4 5 6
7 8 9
. unknown: 1 2   => 1 2  , determinant -9999
1 2
4 5
. unknown: 7     => 7    , determinant -9999
7
CALL MatrixTester -f $(DATA)

TEST L06 multiply 6 elementary matrices
CALL MatrixTester -elem 3

TEST L07 multiply 20 elementary matrices
CALL MatrixTester -elem 4

# TEST L08 division of 2 vectors
# CALL Vector -div 4   3 4 5 6  19 18 21 28
#
# TEST L09 division of 2 vectors, 1st and 3rd element exchanged
# CALL Vector -div 4   3 4 5 6  21 18 19 28
#
# TEST L10 unimodular matrices from 2 vectors
# CALL MatrixTester -div 4   3 4 5 6  19 18 21 28
#
# TEST L11 unimodular matrices from 2 vectors, 1st and 3rd element exchanged
# CALL MatrixTester -div 4   3 4 5 6  21 18 19 28
#
# TEST L12 unimodular matrices with permutations -2
# CALL MatrixTester -many -2
#
# TEST L13 unimodular matrices from many -3
# CALL MatrixTester -many -3
#
# TEST L14 unimodular matrices from many -4
# CALL MatrixTester -many -4
#
# TEST L15 unimodular matrices from many -5
# CALL MatrixTester -many -5
#
# TEST L16 unimodular matrices from many -6
# CALL MatrixTester -many -6
#
# TEST L17 unimodular matrices from many -7
# CALL MatrixTester -many -7
#
# TEST L18 unimodular matrices from many -8
# CALL MatrixTester -many -8
#
# TEST L19 unimodular matrices from many -9
# CALL MatrixTester -many -0
#
# TEST L20 unimodular matrices from many -10
# CALL MatrixTester -many -10

TEST L21 Vector as String
CALL Vector

TEST L22 Matrix as String
CALL MatrixTester

TEST L23 Matrix.printPreservedChain
CALL MatrixTester -chain [[5,5,0,-3],[3,0,-5,5],[0,3,5,-5],[5,5,-3,0]] [3,4,5,6] 3 1

TEST L31 gcd of a vector = 11
CALL Vector -gcd [33,44,55,66]

TEST L32 gcd of a vector = 1
CALL Vector -gcd [32,44,55,66]

TEST L33 gcd of a vector = 11
CALL Vector -gcd [-33,44,55,66]

TEST L34 gcd of a vector = 11
CALL Vector -gcd [0,44,55,66]

TEST L35 gcd of a vector = 0
CALL Vector -gcd [0,0,0]

TEST L36 lcm of a vector
CALL Vector -lcm [3,4,5]

TEST L37 lcm of a vector
CALL Vector -lcm [-3,4,5]

TEST L38 lcm of a vector
CALL Vector -lcm [-3,0,5]

TEST L39 lcm of a vector
CALL Vector -lcm [0,0]

TEST IN1 inverse of a 2x2 Matrix -> [[-8,5],[13,-8]]
CALL MatrixTester -inv               [[8,5],[13,8]]

TEST IN2 inverse of a 2x2 Matrix -> [[-3,2],[2,-1]]
CALL MatrixTester -inv [[1,2],[2,3]]

TEST IN3 inverse of a 3x3 Matrix -> [[-1,0,2],[2,0,-1],[-6,3,0]]*1/3
CALL MatrixTester -inv [[1,2,0],[2,4,1],[2,1,0]]

TEST IN4 inverse det=1
CALL MatrixTester -inv [[0,-2,-2,1],[1,3,2,-1],[-2,-1,1,-1],[2,1,0,2]] 

TEST IN5 inverse det=1, 2 files
CALL MatrixTester -inv -f data/det1.man -f data/det-1.man

TEST IN6 inverse
CALL MatrixTester -inv  [[4,-4,-4,-4],[0,2,0,0],[-3,4,5,4],[3,-4,3,4]]
#--------------------------------
# BigMatrix
TEST BMA 
CALL BigMatrix

TEST BMB
CALL BigMatrix -inv [[4,-4,-4,-4],[0,2,0,0],[-3,4,5,4],[3,-4,3,4]]
