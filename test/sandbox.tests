#!java -cp ../dist/ramath.jar org.teherba.common.RegressionTester
# must be UTF-8: äöüÄÖÜß
# $Id sandbox.tests $
# Test of some experimental methods
# 2016-07-10: ProgramGenerator moved here from matrix.tests
# 2015-08-31, Dr. Georg Fischer: copied from solver.tests
#
#===================================================
PACKAGE=org.teherba.ramath

TEST BX1 eec422
CALL SandBox -eec422 data/two4.1000000.txt

TEST BX2 eec413
CALL SandBox -eec413 data/euler413.man

TEST BXP2 pdiff x^2
CALL SandBox -pdiff "x^2"

TEST BXP3 pdiff x^3
CALL SandBox -pdiff "x^3"

TEST BXP8 pdiff (8*x + 1)^3
CALL SandBox -pdiff "(8x + 1)^3"
#-------------------------
PACKAGE=org.teherba.ramath

TEST PB1 Bachets duplication formula for y^2 = x^3 + c = 0
CALL SandBox -bachet "x" "y" "c"

TEST PB2 Bachet for y^2 = x^3 - 4: [2,2] -> [11,5]
CALL SandBox -bachet "2" "2" "-4"

TEST PB3 Bachet for y^2 = x^3 - 2: [3,5] -> [129/100,383/1000]
CALL SandBox -bachet "3" "5" "-2"

TEST PB4 Bachet for y^2 = x^3 + 1: [2,3] -> [0,-1]
CALL SandBox -bachet "2" "3" "1"

TEST PB5 Bachet for y^2 = x^3 + 1: [0,-1] -> [0,-1]
CALL SandBox -bachet "0" "-1" "1"

TEST PB6 Bachet for y^2 = x^3 + 1: [0,1] -> [0,1]
CALL SandBox -bachet "0" "1" "1"

TEST PB7 Bachet for y^2 = x^3  - 2: [3,5] -> [129/100,383/1000] -> ...
CALL SandBox -bachet 3 5 -2 6

TEST PB8 Bachet for y^2 = x^3  - 4: [2,2] -> [11,5] -> ...
CALL SandBox -bachet 2 2 -4 6

TEST PB9 Bachet for y^2 = x^3  - 2: [3,5] -> [129/100,383/1000] 
CALL SandBox -bachet "24*w+3" "54v+5" "-2"
#----
TEST BR1 Brahmagupta
CALL SandBox -brahma
#----
TEST CMP0 Compositions
CALL SandBox -compose 32

TEST CMP1 Compositions with factor 17
CALL SandBox -compose 6 17

TEST CMP2 Compositions with factor 5
CALL SandBox -compose 6 5
#----
TEST RPS0 Representations
CALL SandBox -repres "(8*t + 1)^3"               64 2

TEST RPS1 Representations
CALL SandBox -repres "3^0*(108*r^2 + 20*r + 1)"  64 2

TEST RPS2 Representations
CALL SandBox -repres "3^1*(108*r^2 + 20*r + 1)"  64 2

TEST RPS3 Representations
CALL SandBox -repres "3^2*(108*r^2 + 20*r + 1)"  64 2

TEST RPS4 Representations
CALL SandBox -repres "3^3*(108*r^2 + 20*r + 1)"  64 2

TEST RPS5 Representations y^3
CALL SandBox -repres "(2v + 1)^3"                64 2

TEST RPS6 Representations
CALL SandBox -repres "2*(2r)^2 + (10r+1)^2"      64 2

TEST RP41 Representations x^2 + 4 = y^3
CALL SandBox -repres "x^2 + 4"                   64 1

TEST RP42 Representations y^2
CALL SandBox -repres "y^2"                       64 1

TEST RP43 Representations y^3
CALL SandBox -repres "y^3"                       64 1

TEST RP44 Representations y^4
CALL SandBox -repres "y^4"                       64 1

TEST RP45 Representations y^5
CALL SandBox -repres "y^5"                       64 1

TEST RPN1 Representations y
CALL SandBox -repres "y"                        512 1

TEST SQS1 SquareSumPrimes 
CALL SandBox -sqsprim "x^2 + 2"

TEST SQS2 SquareSumPrimes 
CALL SandBox -sqsprim "(54x + 5)^2 + 2"          8192

TEST CMP4 Triples
CALL SandBox -triple "(u^2 + v^2)" "(u^2 - v^2)" "(2*u*v)" 16

TEST CMP3 Triples
CALL SandBox -triple "(u^2 + v^2)" "(u^3 - 3*u*v^2)" "(3*u^2*v - v^3)" 16
#---------------------------------------------------------------------
LIM=64
HEAD=6000

# (m^2 - (m-n)^2)^2 ; (2*m*(m-n))^2 ; (m^2 + (m-n)^2)^2

TEST EU01 standard Euclid, complete
# (m^2 - n^2)^2 + (2*m*n)^2 - (m^2 + n^2)^2
CALL SandBox -euclid [[1,0,-1],[0,2,0],[1,0,1]]     $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU02 generates negative
CALL SandBox -euclid [[0,2,-2],[1,-2,0],[1,-2,2]]   $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU03 complete together with EU05?
CALL SandBox -euclid [[1,2,0],[0,2,2],[1,2,2]]      $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU04 same as EU01? complete?
# (2*m*n - n^2)^2 + (2*m^2 - 2*m*n)^2 - (2*m^2 - 2*m*n + n^2)^2
CALL SandBox -euclid [[0,2,-1],[2,-2,0],[2,-2,1]]   $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU05 complete together with EU03?
CALL SandBox -euclid [[0,2,1],[2,2,0],[2,2,1]]      $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

#------------------------------------------
# ProgramGenerator

TEST PG01 m2pyth
CALL ProgramGenerator -w 3 -l 3 -n barning
MAKE progen

TEST PG02 m2opts euclid
CALL ProgramGenerator -w 3 -l 3 -v "[a^2+b^2,2*a*b,a^2-b^2]"                       -v "[5,3,4]"      -n \
                                -p "p^2 = q^2 + r^2" m2opts
MAKE progen

# (a^2 + b^2)^3 = (a^3 - 3*a*b^2)^2 + (3*a^2*b - b^3)^2
TEST PG03 m2opts
CALL ProgramGenerator -w 3 -l 5 -v "[a^2 + b^2, (a^3 - 3*a*b^2), (3*a^2*b - b^3)]" -v "[5, 2, 11]"   \
                                -p "p^3 = q^2 + r^2" m2opts
MAKE progen

TEST PG13 m2opts
CALL ProgramGenerator -w 3 -l 5 -v "[a^2 + b^2, (a^3 - 3*a*b^2), (3*a^2*b - b^3)]" -v "[13,9,46]"    -n \
                                -p "p^3 = q^2 + r^2" m2opts
MAKE progen

# (a^2 + b^2)^4 = (a^4 - 6*a^2*b^2 + b^4)^2 + (4*a^3*b - 4*a*b^3)^2
TEST PG04 m2opts
CALL ProgramGenerator -w 3 -l 4 -v "[a^2+b^2,a^4-6*a^2*b^2+b^4,4*a^3*b-4*a*b^3]"   -v "[5,7,24]"     -n \
                                -p "p^4 = q^2 + r^2" m2opts
MAKE progen

TEST PG14 m2opts
CALL ProgramGenerator -w 3 -l 6 -v "[a^2+b^2,a^4-6*a^2*b^2+b^4,4*a^3*b-4*a*b^3]"   -v "[5,7,24]"     -n \
                                -p "p^4 = q^2 + r^2" m2opts
MAKE progen

TEST PG05 m2euclid
CALL ProgramGenerator -w 3 -l 2 m2euclid
MAKE progen
# 2016-07-11 11:24:00 result:
# [[0,2,0],[1,0,-1],[1,0,1]]                [2,0,2] [4,3,5] [6,8,10] [8,15,17] [10,24,26] [12,35,37] [14,48,50] [16,63,65] !!!!
# [[1,0,-1],[0,2,0],[1,0,1]]                [0,2,2] [3,4,5] [8,6,10] [15,8,17] [24,10,26] [35,12,37] [48,14,50] [63,16,65] !!!!
# -----------------------------
# [[0,2,-2],[1,-2,0],[1,-2,2]]     [0,-1,1] [2,0,2] [4,3,5] [6,8,10] [8,15,17] [10,24,26] [12,35,37] [14,48,50] !!!!
# [[1,-2,0],[0,2,-2],[1,-2,2]]     [-1,0,1] [0,2,2] [3,4,5] [8,6,10] [15,8,17] [24,10,26] [35,12,37] [48,14,50] !!!!
#
# [[1,2,0],[0,2,2],[1,2,2]]                         [3,4,5] [8,6,10] [15,8,17] [24,10,26] [35,12,37] [48,14,50] [63,16,65] [80,18,82] !!!!
# [[0,2,2],[1,2,0],[1,2,2]]                         [4,3,5] [6,8,10] [8,15,17] [10,24,26] [12,35,37] [14,48,50] [16,63,65] [18,80,82] !!!!
# -----------------------------
# [[0,2,-1],[2,-2,0],[2,-2,1]]              [1,0,1] [3,4,5] [5,12,13] [7,24,25] [9,40,41] [11,60,61] [13,84,85] [15,112,113] !!!!
# [[2,-2,0],[0,2,-1],[2,-2,1]]              [0,1,1] [4,3,5] [12,5,13] [24,7,25] [40,9,41] [60,11,61] [84,13,85] [112,15,113] !!!!
#
# [[0,2,1],[2,2,0],[2,2,1]]                         [3,4,5] [5,12,13] [7,24,25] [9,40,41] [11,60,61] [13,84,85] [15,112,113] [17,144,145] !!!!
# [[2,2,0],[0,2,1],[2,2,1]]                         [4,3,5] [12,5,13] [24,7,25] [40,9,41] [60,11,61] [84,13,85] [112,15,113] [144,17,145] !!!!


TEST PG06 m2euclid
CALL ProgramGenerator -w 3 -l 3 m2euclid
MAKE progen
# same results as PG05

TEST PG07 m2euclid
CALL ProgramGenerator -w 3 -l 4 m2euclid
MAKE progen
#-------------------------------
# square powersum (Pythagoras/Euclid)
#--------
TEST PG19 pident 1 variable
DATA
 a = A11*m^1 + A12*m^0;
 b = A21*m^1 + A22*m^0;
 c = A31*m^1 + A32*m^0;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 32 -f $(DATA) pident
MAKE progen
TEST PG19IE
CALL IdentityEvaluator -l 8 -f test/PG19.this.tst -compr -chain
#--------
TEST PG20 pident 1 variable
DATA
 a = A11*m^2 + A12*m + A13;
 b = A21*m^2 + A22*m + A23;
 c = A31*m^2 + A32*m + A33;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG20IE
CALL IdentityEvaluator -l 8 -f test/PG20.this.tst -compr -chain
#--------
TEST PG21 pident - 2 variables - Euclid
DATA
 a = A11*m^2 + A12*m*n + A13*n^2;
 b = A21*m^2 + A22*m*n + A23*n^2;
 c = A31*m^2 + A32*m*n + A33*n^2;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG21IE
CALL IdentityEvaluator -l 8 -f test/PG21.this.tst -compr -chain
#--------
TEST PG22 pident - with exp 1
DATA
 a = A11*m^2 + A12*m*n + A13*n^2 + A14*m + A15*n;
 b = A21*m^2 + A22*m*n + A23*n^2 + A24*m + A25*n;
 c = A31*m^2 + A32*m*n + A33*n^2 + A34*m + A35*n;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG22IE
CALL IdentityEvaluator -l 8 -f test/PG22.this.tst -compr -chain
#--------
TEST PG23 pident with exp 1 and 0
DATA
 a = A11*m^2 + A12*m*n + A13*n^2 + A14*m + A15*n + A16;
 b = A21*m^2 + A22*m*n + A23*n^2 + A24*m + A25*n + A26;
 c = A31*m^2 + A32*m*n + A33*n^2 + A34*m + A35*n + A36;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG23IE
CALL IdentityEvaluator -l 8 -f test/PG23.this.tst -compr -chain
#--------
TEST PG24 pident - 1 var with exps 0-3
DATA
 a = A11*m^3 + A12*m^2 + A13*m + A14;
 b = A21*m^3 + A22*m^2 + A23*m + A24;
 c = A31*m^3 + A32*m^2 + A33*m + A34;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG24IE
CALL IdentityEvaluator -l 8 -f test/PG24.this.tst -compr -chain
#--------
TEST PG25 pident - 1 var with exps 0-4
DATA
 a = A11*m^4 + A12*m^3 + A13*m^2 + A14*m + A15;
 b = A21*m^4 + A22*m^3 + A23*m^2 + A24*m + A25;
 c = A31*m^4 + A32*m^3 + A33*m^2 + A34*m + A35;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG25IE
CALL IdentityEvaluator -l 8 -f test/PG25.this.tst -compr -chain
#--------
TEST PG26 pident 1 variable
DATA
 a = A11*m^2 + A12*m + A13;
 b = A21*m^2 + A22*m + A23;
 c = A31*m^2 + A32*m + A33;
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 16 -f $(DATA) pident
MAKE progen
TEST PG26IE
CALL IdentityEvaluator -l 16 -f test/PG26.this.tst -compr -chain
#-----------------------------------------
EXIT

# cubic powersum
#--------
TEST PG30 pident Vieta + m^2*n^2, m only
# m^4 m^3*n m^2*n^2 m*n^3 n^4
#  1    0      0      -2   0
#  0    1      0       0   1
#  0    2      0       0  -1
#  1    0      0       1   0
# 172 s
DATA
 a = A11*m^4 + A12*m^3 + A13*m^2 + A14*m + A15;
 b = A21*m^4 + A22*m^3 + A23*m^2 + A24*m + A25;
 c = A31*m^4 + A32*m^3 + A33*m^2 + A34*m + A35;
 d = A41*m^4 + A42*m^3 + A43*m^2 + A44*m + A45;
 a^3 + b^3 + c^3 = d^3
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG30IE
CALL IdentityEvaluator -l 8 -f test/PG30.this.tst -compr -chain
#--------
TEST PG31 pident Vieta
# Tito Piezas <https://sites.google.com/site/tpiezas/010>
# Vieta (m^4-2m*n^3)^3 + (m^3*n+n^4)^3 + (2m^3*n-n^4)^3 = (m^4+m*n^3)^3
# m^4 m^3*n m*n^3 n^4
#  1    0     -2   0
#  0    1      0   1
#  0    2      0  -1
#  1    0      1   0
#  [[1,0,-2,0],[0,1,0,1],[0,2,0,-1],[1,0,1,0]]
DATA
 a = A11*m^4 + A12*m^3*n + A13*m*n^3 + A14*n^4;
 b = A21*m^4 + A22*m^3*n + A23*m*n^3 + A24*n^4;
 c = A31*m^4 + A32*m^3*n + A33*m*n^3 + A34*n^4;
 d = A41*m^4 + A42*m^3*n + A43*m*n^3 + A44*n^4;
 a^3 + b^3 + c^3 = d^3
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG31IE
CALL IdentityEvaluator -l 8 -f test/PG31.this.tst -compr -chain
#--------
TEST PG32 pident Vieta + m^2*n^2
# m^4 m^3*n m^2*n^2 m*n^3 n^4
#  1    0      0      -2   0
#  0    1      0       0   1
#  0    2      0       0  -1
#  1    0      0       1   0
# 57 s
DATA
 a = A11*m^4 + A12*m^3*n + A13*m^2*n^2 + A14*m*n^3 + A15*n^4;
 b = A21*m^4 + A22*m^3*n + A23*m^2*n^2 + A24*m*n^3 + A25*n^4;
 c = A31*m^4 + A32*m^3*n + A33*m^2*n^2 + A34*m*n^3 + A35*n^4;
 d = A41*m^4 + A42*m^3*n + A43*m^2*n^2 + A44*m*n^3 + A45*n^4;
 a^3 + b^3 + c^3 = d^3
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG32IE
CALL IdentityEvaluator -l 8 -f test/PG32.this.tst -compr -chain
#--------
TEST PG33 pident Dutch 1
# Dutch 1
#          m^2      m^1   m^0
# a =      m*m + 16 * m - 21;
# b =    - m*m + 16 * m + 21;
# c =  2 * m*m -  4 * m + 42;
# d =  2 * m*m +  4 * m + 42;
# a^3 + b^3 + c^3 = d^3
DATA
 a = A11*m^2 + A12*m + A13;
 b = A21*m^2 + A22*m + A23;
 c = A31*m^2 + A32*m + A33;
 d = A41*m^2 + A42*m + A43;
 a^3 + b^3 + c^3 = d^3
CALL ProgramGenerator -l 6 -f $(DATA) pident
MAKE progen
TEST PG33IE
CALL IdentityEvaluator -l 8 -f test/PG33.this.tst -compr -chain
# found ... -> Ramanujan (all other chains are multiples of [3,4,5,6])
# [[-5,-5,3],[-3,5,5],[6,4,4],[4,4,6]]		[-1,1,2,2]*7 [-9,1,12,10]*3 [-57,-7,70,54] [-97,-23,116,86] [-49,-15,58,42]*3 [-207,-73,244,174] [-277,-107,326,230] 
# [[-3,-5,5],[-5,5,3],[6,-4,4],[4,-4,6]]	[-1,1,2,2]*3 [-17,-7,20,14] [-37,-27,46,30] [-21,-19,28,18]*3 [-95,-97,134,86] [-19,-21,28,18]*7 [-59,-69,90,58]*3 
# 23 s
#--------
# https://sites.google.com/site/tpiezas/010
# Choudhry (complete in the integers, 1998 paper)
# 
# x13 + x23 + x33 + x43 = 0 
# 
# dx1 =  (a^2+a*b+b^2)^2 + (2*a+b)*c^3
# dx2 = -(a^2+a*b+b^2)^2 + (a-b)*c^3 
# dx3 = c*(-a^3+b^3+c^3)
# dx4 = -(a^2+a*b+b^2)*(2*a+b)*c - c^4
#
#  - a^4 - 2*a^3*b - 3*a^2*b^2 - 2*a*b^3 - b^4 - 2*a*c^3 - b*c^3 + w; 
#    a^4 + 2*a^3*b + 3*a^2*b^2 + 2*a*b^3 + b^4 -   a*c^3 + b*c^3 + x; 
#            a^3*c                         - b^3*c - c^4 + y; 
#          2*a^3*c + 3*a^2*b*c + 3*a*b^2*c + b^3*c + c^4 + z; 
#          w^3 + x^3 + y^3 + z^3 = 0
#
# c = 1 => 
# - 2a - a4 - b - 2a³*b - 3a²*b² - 2a*b³ - b^4 + w;  
# - a + a4 + b + 2a³*b + 3a²*b² + 2a*b³ + b^4 + x; 
# a³ - b³ + y - 1; 
# 2a³ + 3a²*b + 3a*b² + b³ + z + 1; 
# w³ + x³ + y³ + z³ 
# TEST PG34 pident Choudry
# DATA
#  w = (a^2+a*b+b^2)^2 + (2*a+b)*c^3   ;   
#  x = - (a^2+a*b+b^2)^2 + (a-b)*c^3   ;   
#  y = c*(-a^3+b^3+c^3)                ;
#  z = -(a^2+a*b+b^2)*(2*a+b)*c - c^4  ;
#  0 = w^3 + x^3 + y^3 + z^3
# CALL symbolic.RelationSet -d 1 -f $(DATA) -simplify
#--------
# b = 1; c = 1 => 
# - 4*a - 3a² - 2a³ - a^4 + w - 2; 
# a + 3a² + 2a³ + a^4 + x + 2; 
# a³ + y - 2; 
# 3a + 3a² + 2a³ + z + 2; 
# w³ + x³ + y³ + z³
TEST PG35 RelationSet Choudry b=1 c=1
DATA
 - 4a - 3a² - 2a³ - a^4 + w - 2; 
    a + 3a² + 2a³ + a^4 + x + 2; 
               a³       + y - 2; 
   3a + 3a² + 2a³       + z + 2; 
 w³ + x³ + y³ + z³ = 0
CALL symbolic.RelationSet -d 1 -f $(DATA) -simplify
#--------
TEST PG36 RelationSet Choudry b=1 c=1
DATA
 w =  4a + 3a² + 2a³ + a^4 + 2; 
 x =  -a - 3a² - 2a³ - a^4 - 2; 
 y =           -  a³       + 2; 
 z = -3a - 3a² - 2a³       - 2; 
 w³ + x³ + y³ + z³ = 0
CALL symbolic.RelationSet -d 1 -f $(DATA) -simplify
#--------
TEST PG37 pident Choudry b=1 c=1
DATA
 a = A11*m^4 + A12*m^3 + A13*m^2 + A14*m + A15;
 b = A21*m^4 + A22*m^3 + A23*m^2 + A24*m + A25;
 c = A31*m^4 + A32*m^3 + A33*m^2 + A34*m + A35;
 d = A41*m^4 + A42*m^3 + A43*m^2 + A44*m + A45;
 a^3 + b^3 + c^3 = d^3 
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG37IE
CALL IdentityEvaluator -l 8 -f test/PG37.this.tst -compr -chain
#--------
TEST PG38 pident Choudry a=1, b=0
# - 2c³ + w - 1;  - c³ + x + 1; c - c^4 + y; 2c + c^4 + z; w³ + x³ + y³ + z³
# w =         2*c^3      + 1;  0  2  0  1
# x =           c^3      - 1;  0  1  0 -1
# y =   c^4         - c     ;  1  0 -1  0
# z =   c^4       + 2*c     ;  1  0  2  0
# w^3 + x^3 + y^3 = z^3
DATA
 a = A11*m^4 + A12*m^3  + A13*m + A14;
 b = A21*m^4 + A22*m^3  + A23*m + A24;
 c = A31*m^4 + A32*m^3  + A33*m + A34;
 d = A41*m^4 + A42*m^3  + A43*m + A44;
 a^3 + b^3 + c^3 = d^3 
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
TEST PG38IE
CALL IdentityEvaluator -l 8 -f test/PG38.this.tst -compr -chain
# found
# [[-1,0,1,0],[0,-1,0,1],[1,0,2,0],[0,2,0,1]]	[0,0,3,3] [-14,-7,20,17] [-78,-26,87,55] [-84,-21,88,43]*3 [-620,-124,635,251] [-1290,-215,1308,433] [-798,-114,805,229]*3 
# [[0,-2,0,1],[-1,0,2,0],[1,0,1,0],[0,1,0,1]]	[-1,1,2,2] [-5,-4,6,3]*3 [-53,-75,84,28] [-127,-248,260,65] [-83,-205,210,42]*3 [-431,-1284,1302,217] [-685,-2387,2408,344] 
# 2.5 s
#--------
TEST PG39 pident Vieta -n^4 + m^2*n^2
DATA
 b = A11*m^4 + A12*m^3*n + A13*m^2*n^2 + A14*m*n^3;
 c = A21*m^4 + A22*m^3*n + A23*m^2*n^2 + A24*m*n^3;
 d = A31*m^4 + A32*m^3*n + A33*m^2*n^2 + A34*m*n^3;
 -1 + b^3 + c^3 = d^3
CALL ProgramGenerator -l 3 -f $(DATA) pident
MAKE progen
TEST PG39IE
CALL IdentityEvaluator -l 8 -f test/PG39.this.tst -compr -chain
#--------
#??TEST PG41 pident 
#??DATA
#?? a = A11*m^5 + A12*m^4 + A13*m^3 + A14*m^2 + A15*m^1 + A16*m^0;
#?? b = A21*m^5 + A22*m^4 + A23*m^3 + A24*m^2 + A25*m^1 + A26*m^0;
#?? c = A31*m^5 + A32*m^4 + A33*m^3 + A34*m^2 + A35*m^1 + A36*m^0;
#?? d = A41*m^5 + A42*m^4 + A43*m^3 + A44*m^2 + A45*m^1 + A46*m^0;
#?? e = A51*m^5 + A52*m^4 + A53*m^3 + A54*m^2 + A55*m^1 + A56*m^0;
#?? a^4 + b^4 + c^4 + d^3 = e^4
#??CALL ProgramGenerator -l 2 -f $(DATA) pident
#??MAKE progen
#??TEST PG41IE
#??CALL IdentityEvaluator -l 8 -f test/PG41.this.tst -compr -chain
#---------------------------------------
