#!java -cp ../dist/ramath.jar org.teherba.common.RegressionTester
#
# $Id sandbox.tests $
# Test of some experimental methods
# 2016-07-10: ProgramGenerator moved here from matrix.tests
# 2015-08-31, Dr. Georg Fischer: copied from solver.tests
#
#===================================================
PACKAGE=org.teherba.ramath

TEST BX1 eec422
CALL SandBox -eec422 data/two4.1000000.txt 

TEST BXP2 pdiff x^2
CALL SandBox -pdiff "x^2"

TEST BXP3 pdiff x^3
CALL SandBox -pdiff "x^3"

TEST BXP8 pdiff (8*x + 1)^3
CALL SandBox -pdiff "(8x + 1)^3"

#------------------------------------------
# ProgramGenerator

TEST PG01 m2pyth
CALL ProgramGenerator -w 3 -l 3 -n barning
MAKE progen

TEST PG02 m2opts euclid
CALL ProgramGenerator -w 3 -l 3 -v "[a^2+b^2,2*a*b,a^2-b^2]"                       -v "[5,3,4]"      -n \
                                -p "p^2 = q^2 + r^2" m2opts 
MAKE progen


# (a^2 + b^2)^3 = (a^3 - 3*a*b^2)^2 + (3*a^2*b - b^3)^2
TEST PG03 m2opts
CALL ProgramGenerator -w 3 -l 5 -v "[a^2 + b^2, (a^3 - 3*a*b^2), (3*a^2*b - b^3)]" -v "[5, 2, 11]"   \
                                -p "p^3 = q^2 + r^2" m2opts
MAKE progen

TEST PG13 m2opts
CALL ProgramGenerator -w 3 -l 5 -v "[a^2 + b^2, (a^3 - 3*a*b^2), (3*a^2*b - b^3)]" -v "[13,9,46]"    -n \
                                -p "p^3 = q^2 + r^2" m2opts
MAKE progen

# (a^2 + b^2)^4 = (a^4 - 6*a^2*b^2 + b^4)^2 + (4*a^3*b - 4*a*b^3)^2
TEST PG04 m2opts
CALL ProgramGenerator -w 3 -l 4 -v "[a^2+b^2,a^4-6*a^2*b^2+b^4,4*a^3*b-4*a*b^3]"   -v "[5,7,24]"     -n \
                                -p "p^4 = q^2 + r^2" m2opts 
MAKE progen

TEST PG14 m2opts
CALL ProgramGenerator -w 3 -l 6 -v "[a^2+b^2,a^4-6*a^2*b^2+b^4,4*a^3*b-4*a*b^3]"   -v "[5,7,24]"     -n \
                                -p "p^4 = q^2 + r^2" m2opts 
MAKE progen

TEST PG05 m2euclid
CALL ProgramGenerator -w 3 -l 2 m2euclid
MAKE progen
# 2016-07-11 11:24:00 result:
# [[0,2,0],[1,0,-1],[1,0,1]]                [2,0,2] [4,3,5] [6,8,10] [8,15,17] [10,24,26] [12,35,37] [14,48,50] [16,63,65] !!!!
# [[1,0,-1],[0,2,0],[1,0,1]]                [0,2,2] [3,4,5] [8,6,10] [15,8,17] [24,10,26] [35,12,37] [48,14,50] [63,16,65] !!!!
# -----------------------------
# [[0,2,-2],[1,-2,0],[1,-2,2]]     [0,-1,1] [2,0,2] [4,3,5] [6,8,10] [8,15,17] [10,24,26] [12,35,37] [14,48,50] !!!!
# [[1,-2,0],[0,2,-2],[1,-2,2]]     [-1,0,1] [0,2,2] [3,4,5] [8,6,10] [15,8,17] [24,10,26] [35,12,37] [48,14,50] !!!!
# 
# [[1,2,0],[0,2,2],[1,2,2]]                         [3,4,5] [8,6,10] [15,8,17] [24,10,26] [35,12,37] [48,14,50] [63,16,65] [80,18,82] !!!!
# [[0,2,2],[1,2,0],[1,2,2]]                         [4,3,5] [6,8,10] [8,15,17] [10,24,26] [12,35,37] [14,48,50] [16,63,65] [18,80,82] !!!!
# -----------------------------
# [[0,2,-1],[2,-2,0],[2,-2,1]]              [1,0,1] [3,4,5] [5,12,13] [7,24,25] [9,40,41] [11,60,61] [13,84,85] [15,112,113] !!!!
# [[2,-2,0],[0,2,-1],[2,-2,1]]              [0,1,1] [4,3,5] [12,5,13] [24,7,25] [40,9,41] [60,11,61] [84,13,85] [112,15,113] !!!!
# 
# [[0,2,1],[2,2,0],[2,2,1]]                         [3,4,5] [5,12,13] [7,24,25] [9,40,41] [11,60,61] [13,84,85] [15,112,113] [17,144,145] !!!!
# [[2,2,0],[0,2,1],[2,2,1]]                         [4,3,5] [12,5,13] [24,7,25] [40,9,41] [60,11,61] [84,13,85] [112,15,113] [144,17,145] !!!!


TEST PG06 m2euclid
CALL ProgramGenerator -w 3 -l 3 m2euclid
MAKE progen
# same results as PG05

TEST PG07 m2euclid
CALL ProgramGenerator -w 3 -l 4 m2euclid
MAKE progen

TEST PG21 pident
DATA
 a = A11*m^2 + A12*m*n + A13*n^2;
 b = A21*m^2 + A22*m*n + A23*n^2;
 c = A31*m^2 + A32*m*n + A33*n^2; 
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen

TEST PG22 pident
DATA
 a = A11*m^2 + A12*m*n + A13*n^2 + A14*m + A15*n;
 b = A21*m^2 + A22*m*n + A23*n^2 + A24*m + A25*n;
 c = A31*m^2 + A32*m*n + A33*n^2 + A34*m + A35*n; 
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen

TEST PG23 pident
DATA
 a = A11*m^2 + A12*m*n + A13*n^2 + A14*m + A15*n + A16;
 b = A21*m^2 + A22*m*n + A23*n^2 + A24*m + A25*n + A26;
 c = A31*m^2 + A32*m*n + A33*n^2 + A34*m + A35*n + A36; 
 a^2 + b^2 - c^2 = 0
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen

# Tito Piezas <https://sites.google.com/site/tpiezas/010>
# Vieta (m^4-2m*n^3)^3 + (m^3*n+n^4)^3 + (2m^3*n-n^4)^3 = (m^4+m*n^3)^3
# m^4 m^3*n m^2*n^2 m*n^3 n^4
#  1    0      0      -2   0
#  0    1      0       0   1
#  0    2      0       0  -1
#  1    0      0       1   0  
TEST PG31 pident Vieta
DATA
 a = A11*m^4 + A12*m^3*n + A13*m^2*n^2 + A14*m*n^3 + A15*n^4;
 b = A21*m^4 + A22*m^3*n + A23*m^2*n^2 + A24*m*n^3 + A25*n^4;
 c = A31*m^4 + A32*m^3*n + A33*m^2*n^2 + A34*m*n^3 + A35*n^4;
 d = A41*m^4 + A42*m^3*n + A43*m^2*n^2 + A44*m*n^3 + A45*n^4;
 a^3 + b^3 + c^3 = d^3
CALL ProgramGenerator -l 2 -f $(DATA) pident
MAKE progen
#---------------------------------------
LIM=64
HEAD=6000

# (m^2 - (m-n)^2)^2 ; (2*m*(m-n))^2 ; (m^2 + (m-n)^2)^2

TEST EU01 standard Euclid, complete
# (m^2 - n^2)^2 + (2*m*n)^2 - (m^2 + n^2)^2
CALL SandBox -euclid [[1,0,-1],[0,2,0],[1,0,1]]     $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU02 generates negative
CALL SandBox -euclid [[0,2,-2],[1,-2,0],[1,-2,2]]   $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU03 complete together with EU05?
CALL SandBox -euclid [[1,2,0],[0,2,2],[1,2,2]]      $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU04 same as EU01? complete?
# (2*m*n - n^2)^2 + (2*m^2 - 2*m*n)^2 - (2*m^2 - 2*m*n + n^2)^2
CALL SandBox -euclid [[0,2,-1],[2,-2,0],[2,-2,1]]   $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST EU05 complete together with EU03?
CALL SandBox -euclid [[0,2,1],[2,2,0],[2,2,1]]      $(LIM)
MAKE primit CASE=$(CASE) HEAD=$(HEAD)

TEST PI