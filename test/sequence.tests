# Collection of Testcases for Ramath
# @(#) $Id: sequence.tests $
# 2021-02-15: HolonomicRecurrence REVERSE
# 2019-10-12: TriangleRecurrence
# 2019-08-29: LinearRecurrence with Berlekamp-Massey
# 2015-03-23, Dr. Georg Fischer: extracted from linear.tests
#-----------------------------------
# Caution:
# (1) Adjust the following line: URL where Ramath was deployed
URL=http://localhost:8080/ramath/servlet
# (2) Adjust the following line: default commandline arguments
ARGS=
#======================================================================

PACKAGE=org.teherba.ramath.sequence
# SequenceReader

TEST SER0
CALL SequenceReader

TEST SER1 -a -d
CALL SequenceReader -a A131313 -d 1,2,3,4,5,6,7,8,9,0,1

TEST SER2 -f
DATA 
 A111111 1,2,3,4,5,6,7,8,9,0,1
 A222222 2,2,3,4,5,6,7,8,9,0,1
 A333333 3,2,3,4,5,6,7,8,9,0,1
CALL SequenceReader -f $(DATA)

TEST SER3 -b -f -m 
DATA 
 A322469 1
 A307048 2
 A160016 3
 A000027 4
CALL SequenceReader -b ../OEIS-mat/common/bfile -m 8 -f $(DATA)

TEST SER4 -b -f -m
DATA 
 A322469 1
 A307048 2
 A160016 3
 A000027 4
CALL SequenceReader -b ../OEIS-mat/common/bfile -m 16 -f $(DATA)

TEST SER5 -f
DATA 
 A111111 1,2,3,4,5,6,7,8,9,0,1
 A222222 2,2,3,4,5,6,7,8,9,0,1
 A333333 3,2,3,4,5,6,7,8,9,0,1
CALL SequenceReader -m 4 -f $(DATA)
#-------------------------------
# JoeisPreparer

TEST JP01 JoeisPreparer joeis
DATA
 A000000	dex	1	postfix	true	10	mod(17,3) + 2 mod(18,10)	A	B
 A074785	dex	0	postfix	true	10	-log(log(2))	A	B
 A074916	dex	1	postfix	true	10	(pi+e)/2	A	B
 A074921	dex	0	postfix	true	10	(pi+e)/2-sqrt(pi*e)	A	B
 A074948	dex	1	postfix	true	10	sqrt((pi^2+e^2)/2)	A	B
 A075549	dex	0	postfix	true	10	9-12*log(2)	A	B
 A076668	dex	0	postfix	true	10	sqrt(2/pi)	A	B
 A077453	dex	1	postfix	true	10	1+sqrt(11)*(sqrt(29)+sqrt(5))/24	A	B
CALL JoeisPreparer -d 0 -f $(DATA)

TEST JP02 JoeisPreparer
DATA
 A038126	post	0	~~floor(sqrt(2*Pi)n)()~~floor(n*2^sqrt(2))~~n=17
CALL JoeisPreparer -f $(DATA)

TEST JP03 postfix
DATA
 A061718	post	0	~~((n+1)*n/2)^n
CALL JoeisPreparer -f $(DATA)
# A061718       post    0       ~~;n;n;1;+;*;2;/;n;^    0

TEST JP04 postfix
DATA
 A109345	post	0	5^((n-1)*n/2)
CALL JoeisPreparer -f $(DATA)
# A109345 post    0      ;5;n;1;-;n;*;2;/;^

TEST JP05 create xpat table
DATA
 01234567	numb	0	CR.valueOf(01234567)	0
 n	name	0	n	0
 +	meth	2	.add(	0
 -	meth	2	.subtract(	0
 -.	meth	1	.negate(	0
 *	meth	2	.multiply(	0
 /	meth	2	.divide(	0
 ^	meth	2	.pow(	0
CALL Recurrence

TEST JP06 infix
DATA
 A109345	infix	0	~~;5;n;1;-;n;*;2;/;^
CALL JoeisPreparer -p test/JP05.data.tmp -f $(DATA)
#-------------------------------
# JoeisExpressionBuilder

TEST JB01 JoeisExpressionBuilder CR.xpat, zeta
DATA
 0	numb	0	CR.ZERO	0
 1	numb	0	CR.ONE	0
 2	numb	0	CR.TWO	0
 01234567	numb	0	CR.valueOf(01234567)	0
 n	name	0	CR.valueOf(mN)	0
 +	meth	2	.add(	0
 -	meth	2	.subtract(	0
 -.	meth	1	.negate(	0
 *	meth	2	.multiply(	0
 /	meth	2	.divide(	0
 ^	func	2	REALS.pow(	2
 agm)	meth	2	.agm(	0
 sqrt)	meth	1	.sqrt(	0
 cos)	meth	1	.cos(	0
 sin)	meth	1	.sin(	0
 zeta)	func	1	Zeta.zeta(	1
CALL JoeisExpressionBuilder -p $(DATA) "zeta(;2;zeta);zeta(;2;zeta);1;-;/"

TEST JB02 JoeisExpressionBuilder agm(1,2)
CALL JoeisExpressionBuilder -p test/JB01.data.tmp "agm(;1;,;2;agm)"

TEST JBT1 JoeisExpressionBuilder RING.ttab
DATA
 0	numb	0	RING.zero()	0
 1	numb	0	RING.one()	0
 01234567	numb	0	RING.monomial(new Q(op1), 0)	0
 x	name	0	RING.x()	0
 
 +	meth	2	RING.add(op1, op2)	0
 -	meth	2	RING.subtract(op1, op2)	0
 -.	meth	1	RING.negate(op1)	0
 *	meth	2	RING.multiply(op1, op2, mN)	0
 /	meth	2	RING.series(op1, op2, mN)	0
 ^	meth	2	RING.exp(RING.multiply(RING.log(op1, mN), op2), mN), mN)	1
 
 exp)	func	1	RING.exp(op1, mN)	0
 log)	func	1	RING.log(op1, mN)	0
 sqrt)	func	1	RING.sqrt(op1, mN)	0
 sinh)	func	1	RING.sinh(op1, mN)	0
CALL JoeisExpressionBuilder -d 1 -t $(DATA) "exp(;x;4;+;exp);sqrt(;2;sqrt);/"

TEST JBT2 JoeisExpressionBuilder A052882	egf	0	x/(2-exp(x))
CALL JoeisExpressionBuilder -t test/JBT1.data.tmp "x;2;exp(;x;exp);-;/"

TEST JBT3 JoeisPreparer -cc postrans
DATA
 A052882	egf	0	x/(2-exp(x))
 A053488	egf	0	exp(exp(sinh(x))-1)-1
CALL JoeisPreparer -d 1 -p test/JBT1.data.tmp -f $(DATA) -cc postrans

TEST JBT4 JoeisPreparer -cc post1
DATA
 A052882	egf	0	x/(2-exp(x))
 A053488	egf	0	exp(exp(sinh(x))-1)-1
CALL JoeisPreparer -d 0 -p test/JBT1.data.tmp -f $(DATA) -cc post1

TEST JBT5 JoeisPreparer -cc trans
DATA
 A052882	egf	0	;x;2;exp(;x;exp);-;/	0
 A053488	egf	0	;exp(;exp(;sinh(;x;sinh);exp);1;-;exp);1;-	0
CALL JoeisPreparer -d 0 -p test/JBT1.data.tmp -f $(DATA) -cc trans
#-------------------------------
# simple expression translation for Z

TEST JBZ1 JoeisExpressionBuilder Z.ttab
DATA
 0	numb	0	Z.ZERO	0
 1	numb	0	Z.ONE	0
 2	numb	0	Z.TWO	0
 3	numb	0	Z.THREE	0
 4	numb	0	Z.FOUR	0
 5	numb	0	Z.FIVE	0
 6	numb	0	Z.SIX	0
 7	numb	0	Z.SEVEN	0
 8	numb	0	Z.EIGHT	0
 9	numb	0	Z.NINE	0
 10	numb	0	Z.TEN	0
 01234567	numb	0	Z.valueOf(op1)	0
 n	name	0	Z.valueOf(mN)	0
 p	name	0	Z.valueOf(p)	0
 
 +	meth	2	op1.add(op2)	0
 -	meth	2	op1.subtract(op2)	0
 -.	meth	1	op1.negate()	0
 *	meth	2	op1.multiply(op2)	0
 /	meth	2	op1.divide(op2)	0
 %	meth	2	op1.mod(op2)	0
 ^	meth	2	op1.pow(op2)	0
 !	func	1	MemoryFactorial.SINGLETON.factorial(op1)	0
 
 binomial)	func	2	Binomial.binomial(op1, op2)	0
 floor)	func	1	op1	0
 gcd)	func	2	op1.gcd(op2)	0
 factorial)	func	1	MemoryFactorial.SINGLETON.factorial(op1)	0
CALL JoeisExpressionBuilder -d 1 -t $(DATA) "n;2;^;1;+"

TEST JBZ2 JoeisPreparer -cc postrans
DATA
 A222963	primes	1	(p-3)*(p+3)/4			a(n) = (p-3)*(p+3)/4
 A161720	primen	1	(p-7)/2			a(n) = (P - 7)/2.
 A245035	primen	1	(p-7)^2*(4*p-1)			a(n) = (P - 7)^2 * (4*P - 1).
 A098741	primes	1	(p^2*(p+1)*(p+2))/6			a(n) = (p^2*(p+1)*(p+2))/6
 A066885	primen	1	(p^2+1)/2			a(n) = (P^2 + 1)/2.
 A109255	primes	1	(p^2-1)/12			a(n) = (p^2 - 1) / 12
CALL JoeisPreparer -d 0 -p test/JBZ1.data.tmp -f $(DATA) -cc postrans

TEST JBZ3 JoeisPreparer -cc postrans
DATA
 A060371	primenp	1	(p-1)!+1			a(n) = (P - 1)! + 1.
 A061024	primenp	1	(p!)^2			a(n) = (P!)^2.
 A066885	primenp	1	(p^2+1)/2			a(n) = (P^2 + 1)/2.
 A067362	primenp	1	p-n!^2			a(n) = p - n!^2
CALL JoeisPreparer -d 0 -p test/JBZ1.data.tmp -f $(DATA) -cc postrans

#-------------------------------
# Triangle
TEST TRA1 Triangle toTriangle
DATA
 A007318
 A029653
 A130595
 A135278
 A271703
CALL Triangle -d 0 -eval   -b ../OEIS-mat/common/bfile -f $(DATA) -m 36

TEST TRA2 Triangle TraitCards
CALL Triangle -d 0 -trait  -b ../OEIS-mat/common/bfile -f test/TRA1.data.tmp -m 36

TEST TRA3 Triangle BorderCards
CALL Triangle -d 0 -border -b ../OEIS-mat/common/bfile -f test/TRA1.data.tmp -m 136

#-------------------------------
# LinearRecurrence

TEST LIR1 LinearRecurrence -comp
CALL LinearRecurrence      -comp 1,2,3 5,6,7 6

TEST LIR2 LinearRecurrence -find
CALL LinearRecurrence -d 1 -find test/LIR1.this.tst

TEST LIR3 LinearRecurrence -find
CALL LinearRecurrence      -find test/LIR1.this.tst

TEST LIR4 LinearRecurrence -comp A041142
CALL LinearRecurrence      -comp 0,18,0,-1 8,9,152,161 10

TEST LIR5 LinearRecurrence -find
CALL LinearRecurrence -d 1 -find test/LIR4.this.tst

TEST LIR6 LinearRecurrence -comp Fibonacci A000045
CALL LinearRecurrence      -comp 1,1 0,1 10

TEST LIR7 LinearRecurrence -find Fibonacci A000045
CALL LinearRecurrence -d 1 -find test/LIR6.this.tst

TEST LIR8 LinearRecurrence some lin.rec.s
DATA
 A041142
 A000045
 A322469
 A307048
CALL LinearRecurrence -d 0 -eval -b ../OEIS-mat/common/bfile -f $(DATA) -m 16

TEST LIR9 LinearRecurrence loop?
DATA
 A000058
CALL LinearRecurrence -d 1 -eval -d 1 -b ../OEIS-mat/common/bfile -f $(DATA) -m 13

TEST LIR10 A309791 Expansion of (1 + 8*x - 6*x^2 + 12*x^3 - 18*x^4)/(1 - x - 9*x^4 + 9*x^5).
CALL LinearRecurrence      -comp 1,0,0,9,-9 1,9,3,15,6 10

TEST LIRD1 denominator  (1 - x - 9*x^4 + 9*x^5).
CALL LinearRecurrence      -den  [1,0,0,9,-9]

TEST LIRD2 denominator of a(n) = 2*a(n-1) + 4*a(n-2)
CALL LinearRecurrence      -den  [2,4]

TEST LIRG1 o.g.f. of A309791
CALL LinearRecurrence -d 1 -gf   [1,0,0,9,-9] [1,9,3,15,6]

TEST LIRG2 o.g.f. of a(n) = 2*a(n-1) + 4*a(n-2)
CALL LinearRecurrence -d 1 -gf   [2,4] [1,3]
#--------
# TriangleRecurrence

TEST TRI1 TriangleRecurrence -find Pascal's triangle A007318
DATA
 0 1
 1 1
 2 1
 3 1
 4 2
 5 1
 6 1
 7 3
 8 3
 9 1
 10 1
 11 4
 12 6
 13 4
 14 1
 15 1
 16 5
 17 10
 18 10
 19 5
 20 1
CALL TriangleRecurrence -d 1 -find $(DATA)

TEST TRI2 TriangleRecurrence -find
# A056242
# T(n,k) = 2*T(n-1,k) + 2*T(n-1,k-1) - T(n-2,k) - T(n-2,k-1), T(1,1) = 1, T(2,1) = 1, T(2,2) = 2. - Philippe Del√©ham, Feb 11 2012
# G.f.: -(-1+x)*x*y/(1-2*x-2*x*y+x^2*y+x^2). - R. J. Mathar, Aug 11 2015
DATA
 1 1
 2 1
 3 2
 4 1
 5 5
 6 4
 7 1
 8 9
 9 16
 10 8
 11 1
 12 14
 13 41
 14 44
 15 16
 16 1
 17 20
 18 85
 19 146
 20 112
 21 32
CALL TriangleRecurrence -d 1 -find  $(DATA)

TEST TRI3 TriangleRecurrence -find
# A046741
# G.f.: (1-t*z)/(1 - z - 2*t*z - t*z^2 + t^3*z^3)
# T(n,k) = T(n-1,k) + 2*T(n-1,k-1) + T(n-2,k-1) - T(n-3,k-3).
DATA
 0 1
 1 1
 2 1
 3 1
 4 4
 5 2
 6 1
 7 7
 8 11
 9 3
 10 1
 11 10
 12 29
 13 26
 14 5
CALL TriangleRecurrence -d 1 -find  $(DATA)

TEST TRI6 TriangleRecurrence eval 4
DATA
 A007318
 A029653
 A130595
 A135278
CALL TriangleRecurrence -d 0 -eval -b ../OEIS-mat/common/bfile -f $(DATA) -m 21

# TEST TRI7 all keyword:tabl
# CALL TriangleRecurrence -d 0 -eval -b ../OEIS-mat/common/bfile -f tabl.lst.tmp -m 15
#-------------------------------
# HolonomicRecurrence
PACKAGE=irvine.test

TEST HR1 A000045 Fibonacci increasing
CALL HolonomicRecurrenceTest  -p "[[0],[1],[1],[-1]" -i "[0,1]" -o 0 -d 2 -n 12 -dist 0 -b -t 0

TEST HR2 A000045 Fibonacci decreasing
CALL HolonomicRecurrenceTest  -p "[[0],[1],[1],[-1]" -i "[0,1]" -o 0 -d 2 -n 12 -dist 0 -b -t 4

TEST HR3 A294119 ordinary with different RE
CALL HolonomicRecurrenceTest -p "[[0],[-4,4],[4],[-1]]" -i "[1,4]" -o 0 -d 0 -n 10 -dist 0 -t 0

TEST HR4 A294119 exponential
CALL HolonomicRecurrenceTest -p "[[0],[-4],[-4],[2,1]]" -i "[1,4]" -o 0 -d 2 -n 10 -dist 2 -b -t 1

TEST HR5 A003684 fixed
CALL HolonomicRecurrenceTest -p "[0]" -i "[4,8,22,84,402,1218,3572,8218,11804]" -d 2 -n 20 -b

TEST HR6 A085110 exp DIST=2
CALL HolonomicRecurrenceTest -p "[[0],[1],[0,1],[-1,-1]]"  -i "[1,4,9,40]" -dist 2 -d 2 -n 10 -o 1 -t 1 -b

TEST HR7 A085110 exp DIST=0
CALL HolonomicRecurrenceTest -p "[[0],[-1],[2,-1],[-1,1]]" -i "[1,4,9,40]" -dist 0 -d 2 -n 10 -o 1 -t 1 -b

# A241929	holos	1	[0,-1,8,-28,56,-70,56,-28,8,-1]	[1,10,60,264,930,2766,7205,16880]	0	0	linea
TEST HR8 A241929 increasing
CALL HolonomicRecurrenceTest -p "[0,-1,8,-28,56,-70,56,-28,8,-1]" -i "[1,10,60,264,930,2766,7205,16880]" -dist 0 -d 0 -n 16 -t 0 -b
TEST HR9 A241929 decreasing
CALL HolonomicRecurrenceTest -p "[0,-1,8,-28,56,-70,56,-28,8,-1]" -i "[1,10,60,264,930,2766,7205,16880]" -dist 0 -d 0 -n 16 -t 4 -b

TEST HR10 A059593 exp incr
CALL HolonomicRecurrenceTest -p "[[0],[1],[-1,-1],[0],[0],[1],[-6,-2],[6,7,1]]" -i "[0,0,0,0,0,24,144,504]" -o 0 -d 2 -dist 6 -t 1 -b
